################################################################
#
# Copyright (c) 2016-2017 EnterpriseDB - All rights reserved.
#
################################################################

# Usage: ansible-playbook edb-rs-04.set_passwords_eprs7.yml --extra-vars "host=eprs-leader dbpwd=3db_pwd"
# Usage: ansible-playbook edb-rs-04.set_passwords_eprs7.yml --extra-vars "host=eprs-leader dbpwd=3db_pwd rspwd=adm1n"

- hosts: "{{ host }}"
  gather_facts: True
  vars:
        rspassword: "{{ rspwd }}"
        dbpassword: "{{ dbpwd }}"

  tasks:

    - name: Ensure pip is installed for module pre-requisites...
      easy_install:
        name: pip
        state: latest

    - name: Install expects module pre-requisites...
      easy_install:
        name: pexpect

    - name: Provide Database Password Input File...
      shell: echo {{ dbpassword }} > ~/dbpassword.txt

    - name: Setting up .ngxpass, since -savepassword is not
      blockinfile:
        create: yes
        mode: 0600
        marker: "# {mark} Ansible Managed .NGXPASS File"
        dest: /opt/edb/.ngxpass
        block: |
          {{ansible_default_ipv4.address}}:8082:admin:{{ rspassword }}

    - name: Join the EPRS Network as Leader Node
      shell: /bin/bash -c "/usr/edb/rs-7.0/client/bin/runRepCLI.sh -joinnetwork -servername leaderNode -host {{ansible_default_ipv4.address}} -port 8082"

    - name: Set the EPRS Administrator Password...
      expect:
        command: /bin/bash -c "/usr/edb/rs-7.0/client/bin/runRepCLI.sh -setadminpassword -savepassword"
        responses:
          Question:
          (.*)Enter admin password(.*): "{{ rspassword }}"
#      no_log: true

    - name: Encrypt the Database Password...
      shell: /bin/bash -c "/usr/edb/rs-7.0/client/bin/runRepCLI.sh -encrypt -input ~/dbpassword.txt -output ~/dbpassword.out -ngxpasspath /opt/edb/ -user admin"